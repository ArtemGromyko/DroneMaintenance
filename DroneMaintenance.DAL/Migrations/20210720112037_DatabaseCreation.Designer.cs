// <auto-generated />
using System;
using DroneMaintenance.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DroneMaintenance.DAL.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20210720112037_DatabaseCreation")]
    partial class DatabaseCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DroneMaintenance.DAL.Entities.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("DroneMaintenance.DAL.Entities.Contract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ServiceRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WorkEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("WorkStart")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ServiceRequestId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("DroneMaintenance.DAL.Entities.ContractSparePart", b =>
                {
                    b.Property<Guid>("ContractId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SparePartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ContractId", "SparePartId");

                    b.HasIndex("SparePartId");

                    b.ToTable("ContractSpareParts");
                });

            modelBuilder.Entity("DroneMaintenance.DAL.Entities.Drone", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Manufacturer")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Drones");
                });

            modelBuilder.Entity("DroneMaintenance.DAL.Entities.ServiceRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("DroneId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RequestStatus")
                        .HasColumnType("int");

                    b.Property<int>("ServiceType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("DroneId");

                    b.ToTable("ServiceRequests");
                });

            modelBuilder.Entity("DroneMaintenance.DAL.Entities.SparePart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("SpareParts");
                });

            modelBuilder.Entity("DroneMaintenance.DAL.Entities.Contract", b =>
                {
                    b.HasOne("DroneMaintenance.DAL.Entities.ServiceRequest", "ServiceRequest")
                        .WithMany("Contracts")
                        .HasForeignKey("ServiceRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceRequest");
                });

            modelBuilder.Entity("DroneMaintenance.DAL.Entities.ContractSparePart", b =>
                {
                    b.HasOne("DroneMaintenance.DAL.Entities.Contract", "Contract")
                        .WithMany("ContractSpareParts")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DroneMaintenance.DAL.Entities.SparePart", "SparePart")
                        .WithMany("ContractSpareParts")
                        .HasForeignKey("SparePartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");

                    b.Navigation("SparePart");
                });

            modelBuilder.Entity("DroneMaintenance.DAL.Entities.ServiceRequest", b =>
                {
                    b.HasOne("DroneMaintenance.DAL.Entities.Client", "Client")
                        .WithMany("ServiceRequests")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DroneMaintenance.DAL.Entities.Drone", "Drone")
                        .WithMany("ServiceRequests")
                        .HasForeignKey("DroneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Drone");
                });

            modelBuilder.Entity("DroneMaintenance.DAL.Entities.Client", b =>
                {
                    b.Navigation("ServiceRequests");
                });

            modelBuilder.Entity("DroneMaintenance.DAL.Entities.Contract", b =>
                {
                    b.Navigation("ContractSpareParts");
                });

            modelBuilder.Entity("DroneMaintenance.DAL.Entities.Drone", b =>
                {
                    b.Navigation("ServiceRequests");
                });

            modelBuilder.Entity("DroneMaintenance.DAL.Entities.ServiceRequest", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("DroneMaintenance.DAL.Entities.SparePart", b =>
                {
                    b.Navigation("ContractSpareParts");
                });
#pragma warning restore 612, 618
        }
    }
}
